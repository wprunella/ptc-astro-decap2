---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import HeaderNav from '../../components/HeaderNav.astro';
import FeaturedImage from '../../components/FeaturedImage.astro';
import LeadWebformCTA from '../../components/LeadWebformCTA.astro';
import SEO from '../../components/SEO.astro';
import Footer from '../../components/Footer.astro'; 

export async function getStaticPaths() {
  const services = await getCollection('services');
  return services.map((service) => ({
    params: { slug: service.slug },
    props: { service },
  }));
}

const { service } = Astro.props;
const locations = await getCollection('locations');
const majorCities = locations.filter(loc => loc.data.type === 'major_city');

// FIX: Check if service has content to render
const { Content } = await service.render();
---

<Layout title={service.data.meta_title || service.data.name}>
  <HeaderNav />
  
  <SEO 
    title={service.data.meta_title || `${service.data.name} | Personal Training Services`}
    description={service.data.meta_description || service.data.tagline}
    canonical={`/services/${service.slug}/`}
  />

  <main class="min-h-screen bg-gray-50">
    <div class="container mx-auto px-4 py-8">
      
      <!-- Hero Section -->
      <section class="bg-white rounded-lg shadow-sm p-8 mb-8">
        <header class="text-center mb-8">
          <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4">{service.data.name}</h1>
          <p class="text-xl text-gray-600 max-w-3xl mx-auto">{service.data.tagline}</p>
        </header>
        
        {service.data.hero_image && (
          <FeaturedImage 
            src={service.data.hero_image} 
            alt={service.data.name}
            loading="lazy"
            className="mb-8"
          />
        )}
        
        <article class="prose prose-lg max-w-none mb-8">
          <Content />
        </article>
      </section>

      <!-- Dynamic Local Expansion: City Grid -->
      <section class="mt-16">
        <h2 class="text-3xl font-bold mb-8 text-center">Find {service.data.name} Near You</h2>
        <div class="grid md:grid-cols-3 lg:grid-cols-4 gap-6">
          {majorCities.map((city) => (
            <div class="bg-white shadow-sm rounded-lg p-6 hover:shadow-md transition-all duration-200">
              <h3 class="text-xl font-semibold mb-2">
                {service.data.name} Trainers in {city.data.city}, {city.data.state}
              </h3>
              <p class="text-gray-600 mb-4">
                {city.data.local_blurb 
                  ? city.data.local_blurb 
                  : `Looking for ${service.data.name.toLowerCase()} in ${city.data.city}? Our certified trainers can help you reach your goals.`}
              </p>
              <a 
                href={`/${city.slug}/${service.slug}`}
                aria-label={`View ${service.data.name} trainers in ${city.data.city}`}
                class="inline-block text-primary-700 font-semibold hover:underline"
              >
                View Trainers â†’
              </a>
            </div>
          ))}
        </div>
      </section>

      <!-- Lead Capture Section -->
      <section class="mt-16">
        <LeadWebformCTA pageSlug={`services/${service.slug}`} />
      </section>
    </div>
  </main>

  <!-- JSON-LD Structured Data -->
  <script type="application/ld+json">
    {JSON.stringify({
      "@context": "https://schema.org",
      "@type": "Service",
      "name": service.data.name,
      "description": service.data.meta_description || service.data.tagline,
      "serviceType": service.data.name,
      "areaServed": majorCities.map(c => `${c.data.city}, ${c.data.state}`),
      "provider": {
        "@type": "Organization",
        "name": "Personal Trainer City",
        "url": "https://personaltrainercity.com"
      }
    })}
  </script>

  <Footer />
</Layout>

