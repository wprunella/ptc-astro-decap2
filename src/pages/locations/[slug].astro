---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import HeaderNav from '../../components/HeaderNav.astro';
import FeaturedImage from '../../components/FeaturedImage.astro';
import LeadWebformCTA from '../../components/LeadWebformCTA.astro';
import SEO from '../../components/SEO.astro';

export async function getStaticPaths() {
  const locations = await getCollection('locations');
  return locations.map((location) => ({
    params: { slug: location.slug },
    props: { location },
  }));
}

const { location } = Astro.props;
const services = await getCollection('services');
const allLocations = await getCollection('locations');

const majorServices = services.slice(0, 6);
const associatedSuburbs = location.data.type === 'major_city' 
  ? allLocations.filter(loc => loc.data.type === 'suburb' && loc.data.parent_slug === location.slug)
  : [];
const parentCity = location.data.type === 'suburb' 
  ? allLocations.find(loc => loc.slug === location.data.parent_slug)
  : null;
---

<Layout title={location.data.meta_title || `Personal Training in ${location.data.city}, ${location.data.state}`}>
  <HeaderNav />
  <SEO 
    title={location.data.meta_title || `Personal Training in ${location.data.city}, ${location.data.state}`}
    description={location.data.meta_description || `Find certified personal trainers in ${location.data.city}, ${location.data.state}. Custom workout plans and fitness programs.`}
    canonical={`/locations/${location.slug}/`}
  />

  <main class="min-h-screen bg-gray-50">
    <div class="container mx-auto px-4 py-8">
      <!-- Hero Section -->
      <div class="bg-white rounded-lg shadow-sm p-8 mb-8">
        <div class="text-center mb-8">
          <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
            Personal Training in {location.data.city}, {location.data.state}
          </h1>
          {parentCity && (
            <p class="text-lg text-gray-600">
              Serving the {parentCity.data.city} area
            </p>
          )}
        </div>
        
        <FeaturedImage 
          src={location.data.hero_image} 
          alt={`Personal training in ${location.data.city}, ${location.data.state}`}
          className="mb-8"
        />
        
        <div class="prose prose-lg max-w-none mb-8">
          <div>{location.body}</div>
        </div>
        
        <!-- Services Available -->
        <div class="mt-12">
          <h2 class="text-2xl font-bold mb-6 text-center">Available Services in {location.data.city}</h2>
          <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-4">
            {majorServices.map((service) => (
              <a 
                href={`/${service.slug}/${location.slug}`}
                class="bg-primary-50 text-primary-700 p-4 rounded-lg text-center hover:bg-primary-100 transition-colors font-semibold"
              >
                {service.data.name}
              </a>
            ))}
          </div>
        </div>
        
        <!-- Associated Suburbs (for major cities) -->
        {associatedSuburbs.length > 0 && (
          <div class="mt-12">
            <h2 class="text-2xl font-bold mb-6 text-center">Also Serving These {location.data.city} Suburbs</h2>
            <div class="grid md:grid-cols-3 lg:grid-cols-4 gap-4">
              {associatedSuburbs.map((suburb) => (
                <a 
                  href={`/locations/${suburb.slug}`}
                  class="bg-gray-100 text-gray-700 p-4 rounded-lg text-center hover:bg-gray-200 transition-colors"
                >
                  {suburb.data.city}
                </a>
              ))}
            </div>
          </div>
        )}
        
        <!-- Backlink to parent city (for suburbs) -->
        {parentCity && (
          <div class="mt-8 text-center">
            <a 
              href={`/locations/${parentCity.slug}`}
              class="text-primary-600 hover:text-primary-700 font-semibold"
            >
              ‚Üê Back to {parentCity.data.city} Main Page
            </a>
          </div>
        )}
      </div>
      
      <!-- Lead Form -->
      <LeadWebformCTA pageSlug={`locations/${location.slug}`} />
    </div>
  </main>
</Layout>
