---
import { getCollection, getEntryBySlug } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import HeaderNav from '../components/HeaderNav.astro';
import FeaturedImage from '../components/FeaturedImage.astro';
import LeadWebformCTA from '../components/LeadWebformCTA.astro';
import SEO from '../components/SEO.astro';
import Footer from '../components/Footer.astro'; 

// --- 1. DYNAMIC ROUTING: Generate Paths for ALL Location and ALL Service Pillars ---
export async function getStaticPaths() {
    const services = await getCollection('services');
    const locations = await getCollection('locations');
    
    // Combine all slugs into one list for the dynamic route [slug]
    const servicePaths = services.map((service) => ({
        params: { slug: service.slug },
        props: { type: 'service', entry: service },
    }));

    const locationPaths = locations.map((location) => ({
        params: { slug: location.slug },
        props: { type: 'location', entry: location },
    }));

    // Returns a combined list of all slugs: e.g., ['washington-dc', 'strength-training', ...]
    return [...servicePaths, ...locationPaths];
}

// --- 2. DATA RESOLUTION ---
// The slug is resolved to either a Location or a Service entry
const { type, entry } = Astro.props;

// Fetch ALL locations and services needed for interlinking in BOTH page types
const allLocations = await getCollection('locations');
const allServices = await getCollection('services');

// Render the Markdown body content into a component
const { Content } = await entry.render();

// --- LOCATION-SPECIFIC LOGIC (For interlinking/display when type === 'location') ---
const majorServices = allServices.slice(0, 6); 

const isMajorCity = type === 'location' && entry.data.type === 'major_city';

// Filter Suburbs and Neighborhoods based on the current location entry
const associatedSuburbs = isMajorCity
    ? allLocations.filter(loc => loc.data.type === 'suburb' && loc.data.parent_slug === entry.slug)
    : [];
    
const associatedNeighborhoods = isMajorCity
    ? allLocations.filter(loc => loc.data.type === 'neighborhood' && loc.data.parent_slug === entry.slug)
    : [];
  
// Find parent city for backlink logic (if current page is a suburb/neighborhood)
const parentCity = (type === 'location' && (entry.data.type === 'suburb' || entry.data.type === 'neighborhood'))
    ? allLocations.find(loc => loc.slug === entry.data.parent_slug)
    : null;

// --- PAGE METADATA (Unified) ---
let pageTitle;
if (type === 'location') {
    pageTitle = `Personal Training in ${entry.data.city}, ${entry.data.state}`;
} else { // type === 'service'
    pageTitle = entry.data.meta_title || `${entry.data.name} | Personal Training Services`;
}
---

<Layout title={pageTitle}>
    <HeaderNav />
    <SEO 
        title={pageTitle}
        description={entry.data.meta_description || entry.data.tagline || 'Find certified trainers...'}
        // FINAL CANONICAL URL: Enforcing the clean root structure: /washington-dc/ or /strength-training/
        canonical={`/${entry.slug}/`} 
    />

  <main class="bg-gray-50 w-full">

    <section class="bg-gray-900 text-white text-center py-24 md:py-32">
        {/* H1 Mapping: Targets the high-intent query */}
        <div class="container mx-auto px-4 text-center">
          <h1 class="text-4xl md:text-5xl font-bold mb-6">{pageTitle}</h1>
          <p class="text-xl text-gray-400 max-w-3xl mx-auto pt-6">{entry.data.meta_description}</p>
          </div>
    </section>

    <div class="container mx-auto px-4 md:px-6 py-12">
        <div class="max-w-6xl mx-auto p-6 sm:p-8 lg:p-12">
     
         
            <!--
            <FeaturedImage 
                src={entry.data.hero_image} 
                alt={pageTitle}
                className="mb-10 w-full rounded-lg"
            />
            -->

            <div class="prose prose-lg max-w-none mb-10">
                <Content />
            </div>

                <!-- ---------------------------------------------------- -->
                <!-- üéØ SECTION 2: INTERLINKING LOGIC (Conditional) -->
                <!-- ---------------------------------------------------- -->
                
                {/* --- A. Service Pillar Links (Only displays on Location Pages) --- */}
                {type === 'location' && (
                    <div class="mt-12">
                        <h2 class="text-2xl font-bold mb-6 text-center">Available Services in {entry.data.city}</h2>
                        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-4">
                            {majorServices.map((service) => (
                                <a 
                                    // LINK: /location-slug/service-slug
                                    href={`/${entry.slug}/${service.slug}`} 
                                    class="bg-primary-50 text-primary-700 p-4 rounded-lg text-center hover:bg-primary-100 transition-colors font-semibold"
                                >
                                    {service.data.name}
                                </a>
                            ))}
                        </div>
                    </div>
                )}

                {/* --- B. Location Pillar Links (Only displays on Service Pages) --- */}
                {type === 'service' && allLocations.filter(loc => loc.data.type === 'major_city').length > 0 && (
                    <div class="mt-12">
                        <h2 class="text-2xl font-bold mb-6 text-center">Find {entry.data.name} in These Major Cities</h2>
                        <div class="grid md:grid-cols-3 lg:grid-cols-4 gap-4">
                            {allLocations.filter(loc => loc.data.type === 'major_city').map((city) => (
                                <a 
                                    // LINK: /location-slug/service-slug (Coupled Page)
                                    href={`/${city.slug}/${entry.slug}`} 
                                    class="bg-primary-50 text-primary-700 p-4 rounded-lg text-center hover:bg-primary-100 transition-colors font-semibold"
                                >
                                    {city.data.city}, {city.data.state}
                                </a>
                            ))}
                        </div>
                    </div>
                )}
                
                {/* --- C. Suburb/Neighborhood Links (Only displays on Major City Pages) --- */}
                {isMajorCity && (associatedNeighborhoods.length > 0 || associatedSuburbs.length > 0) && (
                    <>
                        {/* Neighborhoods (More granular links) */}
                        {associatedNeighborhoods.length > 0 && (
                            <div class="mt-12">
                                <h2 class="text-2xl font-bold mb-6 text-center">Popular Neighborhoods in {entry.data.city}</h2>
                                <div class="grid md:grid-cols-4 lg:grid-cols-6 gap-3">
                                    {associatedNeighborhoods.map((n) => (
                                        <a href={`/${n.slug}`} class="bg-blue-50 text-blue-700 p-3 rounded-lg text-center text-sm hover:bg-blue-100 transition-colors">
                                            {n.data.city}
                                        </a>
                                    ))}
                                </div>
                            </div>
                        )}
                        
                        {/* Suburbs (Regional links) */}
                        {associatedSuburbs.length > 0 && (
                            <div class="mt-12">
                                <h2 class="text-2xl font-bold mb-6 text-center">Serving the Greater {entry.data.city} Area Suburbs</h2>
                                <div class="grid md:grid-cols-3 lg:grid-cols-4 gap-4">
                                    {associatedSuburbs.map((suburb) => (
                                        <a href={`/${suburb.slug}`} class="bg-gray-100 text-gray-700 p-4 rounded-lg text-center hover:bg-gray-200 transition-colors">
                                            {suburb.data.city}
                                        </a>
                                    ))}
                                </div>
                            </div>
                        )}
                    </>
                )}
                
                {/* --- D. Backlink to Parent City (Only displays on Suburb/Neighborhood Pages) --- */}
                {parentCity && (
                    <div class="mt-8 text-center">
                        <a href={`/${parentCity.slug}`} class="text-primary-600 hover:text-primary-700 font-semibold">
                            ‚Üê Back to {parentCity.data.city} Main Page
                        </a>
                    </div>
                )}

            </div>
            
            <!-- Conversion Trigger (The P.P.I. Webform) -->
            <LeadWebformCTA pageSlug={entry.slug} />
        </div>
    </main>
    <Footer />
</Layout>
