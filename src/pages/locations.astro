---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import HeaderNav from '../components/HeaderNav.astro';
import SEO from '../components/SEO.astro';
import Footer from '../components/Footer.astro';

const allLocations = await getCollection('locations');

// 1. Separate Major Cities from Suburbs/Neighborhoods
const majorCities = allLocations.filter(loc => loc.data.type === 'major_city');
const suburbsAndNeighborhoods = allLocations.filter(loc => loc.data.type !== 'major_city');

// 2. CRITICAL STEP: Structure the data into Market Hubs
const marketHubs = {};

// Initialize the map with Major Cities as keys
majorCities.forEach(hub => {
    marketHubs[hub.slug] = {
        hub: hub,
        children: []
    };
});

// Place all children (suburbs/neighborhoods) under their parent hub
suburbsAndNeighborhoods.forEach(child => {
    const parentSlug = child.data.parent_slug;
    if (marketHubs[parentSlug]) {
        marketHubs[parentSlug].children.push(child);
    }
});

// Convert the map values to an array for easy rendering, sorted by city name
const sortedMarketHubs = Object.values(marketHubs).sort((a, b) => 
    a.hub.data.city.localeCompare(b.hub.data.city)
);
---

<Layout title="Personal Training Locations">
  <HeaderNav />
  <SEO 
    title="Service Areas & Locations | Find a Trainer Near You"
    description="Browse our complete list of cities, suburbs, and neighborhoods served by certified personal trainers."
    canonical="/locations-list/"
  />

  <main class="min-h-screen bg-gray-50">
  <h1 class="bg-gray-900 p-40 text-4xl md:text-5xl font-bold text-center text-white">Locations</h1>
    <div class="container mx-auto px-4 py-12 max-w-7xl">
      
      
      {/* 1. Major Metropolitan Hubs (List remains the same) */}
      <section class="mb-16">
        <h2 class="text-3xl font-bold text-gray-600 border-b border-gray-300 text-center mb-8 p-4">Major Metropolitan Hubs</h2>
        <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-4">
          {majorCities.map((loc) => (
            <a 
              href={`/${loc.slug}`} 
              class="bg-white rounded-lg shadow-md p-5 text-center hover:shadow-lg hover:shadow-primary-300 transition-shadow border border-primary-100"
            >
              <h3 class="text-xl font-bold text-primary-800">{loc.data.city}</h3>
               <p class="text-sm text-gray-500">{loc.data.state}</p>
              
            </a>
          ))}
        </div>
      </section>

      {/* 2. Structured Suburbs & Neighborhoods List (NEW STRUCTURE) */}
      <section>
        <h2 class="text-3xl font-bold text-gray-600 border-b border-gray-300 text-center mb-8 p-4">Suburbs & Neighborhoods</h2>
        
        <div class="space-y-12">
          {sortedMarketHubs.map((market) => (
            <div class="bg-white p-6 rounded-xl shadow-sm border border-gray-100">
                
                {/* Hub Heading */}
                <h3 class="text-2xl font-extrabold text-blue-900 mb-4 pb-2 uppercase text-center">
                    {market.hub.data.city} {market.hub.data.state}
                </h3>
                
                {/* Children List */}
                <div class="grid sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
                  {market.children.sort((a, b) => a.data.city.localeCompare(b.data.city)).map((loc) => (
                    <a 
              href={`/${loc.slug}`} 
              class="bg-white rounded-lg shadow-md p-5 text-center hover:shadow-lg hover:shadow-primary-300 transition-shadow border border-primary-100"
            >
              <p class="text-l font-bold text-primary-800">{loc.data.city}</p>
               <p class="text-sm text-gray-500">{loc.data.state}</p>
              
            </a>
                  ))}
                </div>
            </div>
          ))}
        </div>
      </section>
      
    </div>
  </main>
  
  <Footer />
</Layout>

