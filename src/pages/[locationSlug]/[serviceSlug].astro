---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import HeaderNav from '../../components/HeaderNav.astro';
import FeaturedImage from '../../components/FeaturedImage.astro';
import LeadWebformCTA from '../../components/LeadWebformCTA.astro';
import SEO from '../../components/SEO.astro';

// 1. DYNAMIC ROUTING: Generates all service/location combinations (e.g., /washington-dc/strength-training/)
export async function getStaticPaths() {
  const services = await getCollection('services');
  const locations = await getCollection('locations');
  
  const paths = [];
  
  // Create a cartesian product of Services x Locations
  for (const service of services) {
    for (const location of locations) {
      paths.push({
        params: {
          // ðŸ”¥ CRITICAL FIX: SWAP ORDER to enforce /location/service/
          locationSlug: location.slug, 
          serviceSlug: service.slug
        },
        props: {
          service,
          location
        }
      });
    }
  }
  
  return paths;
}

const { service, location } = Astro.props;

// FIX: Render the Markdown bodies into reusable Astro components
const { Content: ServiceContent } = await service.render(); 
const { Content: LocationContent } = await location.render(); 

// SEO & H1 Mapping Logic
const pageTitle = `${service.data.name} in ${location.data.city}, ${location.data.state}`;
const pageDescription = `Find certified ${service.data.name.toLowerCase()} personal trainers in ${location.data.city}, ${location.data.state}. ${service.data.tagline}`;
---

<Layout title={pageTitle}>
  <HeaderNav />
  <SEO 
    title={pageTitle}
    description={pageDescription}
    // ðŸ”¥ CRITICAL FIX: Canonical URL enforces the /location/service structure
    canonical={`/${location.slug}/${service.slug}/`}
  />

  <main class="min-h-screen bg-gray-50">
    <div class="container mx-auto px-4 py-8">
      <div class="bg-white rounded-lg shadow-sm p-8 mb-8">
        <div class="text-center mb-8">
          {/* H1 Mapping: Targets the high-intent query */}
          <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4">{pageTitle}</h1>
          <p class="text-xl text-gray-600 max-w-3xl mx-auto">{service.data.tagline}</p>
        </div>
        
        <FeaturedImage 
          src={service.data.hero_image} 
          alt={`${service.data.name} in ${location.data.city}`}
          className="mb-8"
        />
        
        <div class="max-w-none"> 
          
          {/* ROW 1: Service Authority (Long Description) */}
          <div class="mb-8">
            <h2 class="text-3xl font-bold mb-6 text-gray-800">About Our {service.data.name} Program</h2>
            {/* FIX: Apply prose directly to the content for correct formatting */}
            <div class="prose prose-lg max-w-none">
              <ServiceContent />
            </div>
          </div>

          {/* Divider for visual separation */}
          <hr class="my-10 border-gray-200" /> 
          
          {/* ROW 2: Location Relevance (AI-Generated Hyper-Local Text) */}
          <div>
            <h2 class="text-3xl font-bold mb-6 text-gray-800">Training in {location.data.city} Specifics</h2>
            {/* FIX: Apply prose directly to the content for correct formatting */}
            <div class="prose prose-lg max-w-none">
              <LocationContent />
            </div>
          </div>
            
        </div>
      </div>
      
      {/* URL in pageSlug must also match the new structure */}
      <LeadWebformCTA pageSlug={`${location.slug}/${service.slug}`} /> 
    </div>
  </main>
</Layout>