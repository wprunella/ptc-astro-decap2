---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import HeaderNav from '../../components/HeaderNav.astro';
import FeaturedImage from '../../components/FeaturedImage.astro';
import LeadWebformCTA from '../../components/LeadWebformCTA.astro';
import Footer from '../../components/Footer.astro';
import SEO from '../../components/SEO.astro';

// 1. DYNAMIC ROUTING: Generates paths using the new, shallow structure
export async function getStaticPaths() {
  const services = await getCollection('services');
  const locations = await getCollection('locations');
  
  const paths = [];
  
  // Create a cartesian product of Services x Locations
  for (const service of services) {
    for (const location of locations) {
      paths.push({
        params: {
          // CRITICAL FIX: The new path parameters are [slug] and [serviceSlug]
          locationSlug: location.slug, 
          serviceSlug: service.slug
        },
        props: {
          service,
          location
        }
      });
    }
  }
  
  return paths;
}

// Data is accessed by the new path names
const { service, location } = Astro.props; 

// FIX: Render the Markdown bodies into reusable Astro components
const { Content: ServiceContent } = await service.render(); 
const { Content: LocationContent } = await location.render(); 

// SEO & H1 Mapping Logic
const pageTitle = `${service.data.name} in ${location.data.city}, ${location.data.state}`;
const pageDescription = `Find certified ${service.data.name.toLowerCase()} personal trainers in ${location.data.city}, ${location.data.state}. ${service.data.tagline}`;
---

<Layout title={pageTitle}>
  <HeaderNav />
  <SEO 
    title={pageTitle}
    description={pageDescription}
    // Canonical URL enforces the /location/service structure
    canonical={`/${location.slug}/${service.slug}/`} 
  />

  <main class="bg-gray-50 w-full">

    <section class="bg-gray-900 p-40 text-white text-center">
        {/* H1 Mapping: Targets the high-intent query */}
        <div class="container mx-auto">
          <h1 class="text-4xl md:text-5xl font-bold mb-6">{pageTitle}</h1>
          <p class="text-xl text-gray-400 max-w-3xl mx-auto pt-6">{service.data.tagline}</p>
          </div>
    </section>
        
        <!--
        <FeaturedImage 
          src={service.data.hero_image} 
          alt={`${service.data.name} in ${location.data.city}`}
          className="mb-8"
        />
        -->
        
        <div class="container mx-auto px-4 md:px-6 py-12">
        <div class="max-w-6xl mx-auto p-6 sm:p-8 lg:p-12"> 
          
          {/* ROW 1: Service Authority (Long Description) */}
          <div class="mb-8">
            <div class="prose prose-lg max-w-none">
              <ServiceContent />
            </div>
          </div>

          {/* Divider for visual separation */}
          <hr class="my-10 border-gray-200" /> 
          
          {/* ROW 2: Location Relevance (AI-Generated Hyper-Local Text) */}
          <div>
            <div class="prose prose-lg max-w-none">

            <p>{location.data.brief_description}</p>
            
            <p>Serving area code: <strong>{location.data.zip_codes.join(", ")}</strong></p>

            <p><a href={`/${location.slug}`}>{location.data.city} {location.data.state}</a></p>
              
              <!-- <LocationContent /> -->
            </div>
          </div>
            
        </div>
      </div>
      
      <LeadWebformCTA pageSlug={`${location.slug}/${service.slug}`} /> 
    </div>
  </main>
  <Footer />
</Layout>