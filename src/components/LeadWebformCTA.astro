---
interface Props {
  pageSlug: string;
}

const { pageSlug } = Astro.props;
---

<div class="bg-primary-600 text-white rounded-lg p-8 my-8" id="lead-form">
  <h3 class="text-2xl font-bold mb-4">Start Your Fitness Journey Today!</h3>
  <p class="mb-6">Get matched with a certified personal trainer in your area.</p>
  
  <form class="space-y-4" id="webform">
    <div class="grid md:grid-cols-2 gap-4">
      <div>
        <label for="name" class="block text-sm font-medium mb-1">Full Name</label>
        <input 
          type="text" 
          id="name" 
          name="name" 
          required 
          class="w-full px-3 py-2 text-gray-900 rounded focus:ring-2 focus:ring-primary-300 focus:outline-none"
        >
      </div>
      <div>
        <label for="email" class="block text-sm font-medium mb-1">Email</label>
        <input 
          type="email" 
          id="email" 
          name="email" 
          required 
          class="w-full px-3 py-2 text-gray-900 rounded focus:ring-2 focus:ring-primary-300 focus:outline-none"
        >
      </div>
    </div>
    <div class="grid md:grid-cols-2 gap-4">
      <div>
        <label for="phone" class="block text-sm font-medium mb-1">Phone</label>
        <input 
          type="tel" 
          id="phone" 
          name="phone" 
          class="w-full px-3 py-2 text-gray-900 rounded focus:ring-2 focus:ring-primary-300 focus:outline-none"
        >
      </div>
      <div>
        <label for="goal" class="block text-sm font-medium mb-1">Primary Goal</label>
        <select 
          id="goal" 
          name="goal" 
          class="w-full px-3 py-2 text-gray-900 rounded focus:ring-2 focus:ring-primary-300 focus:outline-none"
        >
          <option value="weight-loss">Weight Loss</option>
          <option value="strength">Strength Training</option>
          <option value="muscle">Muscle Building</option>
          <option value="general">General Fitness</option>
        </select>
      </div>
    </div>
    <input type="hidden" name="page_slug" value={pageSlug} />
    <button 
      type="submit" 
      class="w-full bg-white text-primary-600 font-semibold py-3 px-6 rounded hover:bg-gray-100 transition-colors"
    >
      Get Started Now
    </button>
  </form>
  
  <div id="form-message" class="mt-4 hidden"></div>
</div>

<script define:vars={{ pageSlug }} client:load>
document.getElementById('webform').addEventListener('submit', async (e) => {
  e.preventDefault();
  
  const form = e.target;
  const formData = new FormData(form);
  const submitButton = form.querySelector('button[type="submit"]');
  const messageDiv = document.getElementById('form-message');
  
  // Show loading state
  submitButton.disabled = true;
  submitButton.textContent = 'Sending...';
  messageDiv.classList.add('hidden');
  
  try {
    const response = await fetch('https://your-xano-endpoint.com/webhook', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        name: formData.get('name'),
        email: formData.get('email'),
        phone: formData.get('phone'),
        goal: formData.get('goal'),
        page_slug: formData.get('page_slug'),
        timestamp: new Date().toISOString()
      })
    });
    
    if (response.ok) {
      messageDiv.textContent = 'Thank you! We\'ll contact you shortly.';
      messageDiv.className = 'mt-4 p-3 bg-green-100 text-green-700 rounded';
      form.reset();
    } else {
      throw new Error('Submission failed');
    }
  } catch (error) {
    messageDiv.textContent = 'Sorry, there was an error. Please try again or call us directly.';
    messageDiv.className = 'mt-4 p-3 bg-red-100 text-red-700 rounded';
  } finally {
    messageDiv.classList.remove('hidden');
    submitButton.disabled = false;
    submitButton.textContent = 'Get Started Now';
  }
});
</script>
